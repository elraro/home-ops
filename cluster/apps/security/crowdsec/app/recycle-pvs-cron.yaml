---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pv-recycler
  namespace: security
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pv-recycler
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pv-recycler-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pv-recycler
subjects:
  - kind: ServiceAccount
    name: pv-recycler
    namespace: security
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: recycle-pvs
  namespace: security
spec:
  schedule: "*/5 * * * *" # cada 5 minutos
  concurrencyPolicy: "Forbid"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      backoffLimit: 3
      ttlSecondsAfterFinished: 300
      template:
        spec:
          serviceAccountName: pv-recycler
          restartPolicy: Never
          containers:
            - name: recycle
              image: registry.suse.com/suse/kubectl:1.33@sha256:ef5f3e6883694842d085bab417f7b142ca8a46453ad6511b451f032f3f7068b8
              command:
                - /bin/sh
                - -c
                - |
                  for pv in $(kubectl get pv -o jsonpath='{.items[?(@.status.phase=="Released")].metadata.name}'); do
                    kubectl patch pv $pv -p '{"spec":{"claimRef": null}}'
                  done
