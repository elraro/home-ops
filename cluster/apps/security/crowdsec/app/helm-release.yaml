---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: crowdsec
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: crowdsec
      version: 0.20.1
      sourceRef:
        kind: HelmRepository
        name: crowdsec
        namespace: flux-system
      interval: 30m
  timeout: 3m
  maxHistory: 3
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    container_runtime: containerd
    image:
      repository: ghcr.io/crowdsecurity/crowdsec
      pullPolicy: IfNotPresent
      tag: 'v1.7.3'
    tls:
      enabled: false
    config:
      profiles.yaml: |
        - name: default_ip_remediation
          filters:
            - Alert.Remediation == true && Alert.GetScope() == "Ip"
          decisions:
            - type: ban
              duration: 4h
          notifications:
            - http_default
          on_success: break
      config.yaml.local: |
        api:
          server:
            auto_registration: # Activate if not using TLS for authentication
              enabled: true
              token: "$${REGISTRATION_TOKEN}" # /!\ Do not modify this variable (auto-generated and handled by the chart)
              allowed_ranges: # /!\ Make sure to adapt to the pod IP ranges used by your cluster
                - "127.0.0.1/32"
                - "10.42.0.0/16"
    agent:
      config:
        common:
          poll_without_inotify: true
      acquisition:
        - namespace: home
          podName: home-assistant-*
          program: home-assistant
      additionalAcquisition:
        - source: file
          filenames:
            - /nextcloud.log
          labels:
            type: Nextcloud
      env:
        - name: PARSERS
          value: "crowdsecurity/cri-logs"
        - name: COLLECTIONS
          value: "crowdsecurity/nextcloud crowdsecurity/home-assistant"
      metrics:
        enabled: false
        serviceMonitor:
          enabled: false
      persistentVolume:
        config:
          enabled: true
          existingClaim: crowdsec-agent-config-pvc
      extraVolumes:
        - name: nextcloud-log
          hostPath:
            path: /mnt/sdc1/nextcloud/data/nextcloud.log
        - name: var-log-containers
          hostPath:
            path: /var/log/containers
        - name: var-log-pods
          hostPath:
            path: /var/log/pods
      extraVolumeMounts:
        - name: nextcloud-log
          mountPath: /nextcloud.log
          readOnly: true
        - name: var-log-containers
          mountPath: /var/log/containers
          readOnly: true
        - name: var-log-pods
          mountPath: /var/log/pods
          readOnly: true
    lapi:
      dashboard:
        enabled: false
        ingress:
          enabled: false
          ingressClassName: "internal"
          host: &hostdashboard "crowdsec-dashboard.${SECRET_DOMAIN}"
          tls:
            - hosts:
                - *hostdashboard
      ingress:
        enabled: true
        ingressClassName: "internal"
        host: &host "crowdsec.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host
      env:
        - name: ENROLL_KEY
          value: "${CS_KEY}"
        - name: ENROLL_INSTANCE_NAME
          value: "${CS_INSTANCE}"
        - name: ENROLL_TAGS
          value: 'linux k8s'
      metrics:
        enabled: false
        serviceMonitor:
          enabled: false
      persistentVolume:
        config:
          enabled: true
          existingClaim: crowdsec-config-pvc
        data:
          enabled: true
          existingClaim: crowdsec-db-pvc
      extraVolumes:
        - name: http-config
          hostPath:
            path: /home/elraro/home-ops/volumes/crowdsec/http.yaml
      extraVolumeMounts:
        - name: http-config
          mountPath: /etc/crowdsec_data/notifications/http.yaml
          readOnly: true
